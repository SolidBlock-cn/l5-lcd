"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Internals = void 0;
const AssetManager_js_1 = require("./AssetManager.js");
const shared_audio_tags_js_1 = require("./audio/shared-audio-tags.js");
const CanUseRemotionHooks_js_1 = require("./CanUseRemotionHooks.js");
const CompositionManager_js_1 = require("./CompositionManager.js");
const CompositionManagerContext_js_1 = require("./CompositionManagerContext.js");
const CSSUtils = __importStar(require("./default-css.js"));
const delay_render_js_1 = require("./delay-render.js");
const EditorProps_js_1 = require("./EditorProps.js");
const get_environment_js_1 = require("./get-environment.js");
const get_preview_dom_element_js_1 = require("./get-preview-dom-element.js");
const interpolate_colors_js_1 = require("./interpolate-colors.js");
const is_player_js_1 = require("./is-player.js");
const nonce_js_1 = require("./nonce.js");
const portal_node_js_1 = require("./portal-node.js");
const prefetch_state_js_1 = require("./prefetch-state.js");
const prefetch_js_1 = require("./prefetch.js");
const register_root_js_1 = require("./register-root.js");
const RemotionRoot_js_1 = require("./RemotionRoot.js");
const resolve_video_config_js_1 = require("./resolve-video-config.js");
const ResolveCompositionConfig_js_1 = require("./ResolveCompositionConfig.js");
const SequenceContext_js_1 = require("./SequenceContext.js");
const SequenceManager_js_1 = require("./SequenceManager.js");
const setup_env_variables_js_1 = require("./setup-env-variables.js");
const TimelinePosition = __importStar(require("./timeline-position-state.js"));
const truthy_js_1 = require("./truthy.js");
const use_lazy_component_js_1 = require("./use-lazy-component.js");
const use_unsafe_video_config_js_1 = require("./use-unsafe-video-config.js");
const use_video_js_1 = require("./use-video.js");
const validate_frame_js_1 = require("./validate-frame.js");
const validate_composition_id_js_1 = require("./validation/validate-composition-id.js");
const validate_default_props_js_1 = require("./validation/validate-default-props.js");
const validate_dimensions_js_1 = require("./validation/validate-dimensions.js");
const validate_duration_in_frames_js_1 = require("./validation/validate-duration-in-frames.js");
const validate_fps_js_1 = require("./validation/validate-fps.js");
const duration_state_js_1 = require("./video/duration-state.js");
const volume_position_state_js_1 = require("./volume-position-state.js");
const wrap_remotion_context_js_1 = require("./wrap-remotion-context.js");
const Timeline = TimelinePosition;
// Mark them as Internals so use don't assume this is public
// API and are less likely to use it
exports.Internals = {
    useUnsafeVideoConfig: use_unsafe_video_config_js_1.useUnsafeVideoConfig,
    Timeline,
    CompositionManager: CompositionManagerContext_js_1.CompositionManager,
    SequenceManager: SequenceManager_js_1.SequenceManager,
    RemotionRoot: RemotionRoot_js_1.RemotionRoot,
    useVideo: use_video_js_1.useVideo,
    getRoot: register_root_js_1.getRoot,
    useMediaVolumeState: volume_position_state_js_1.useMediaVolumeState,
    useMediaMutedState: volume_position_state_js_1.useMediaMutedState,
    useLazyComponent: use_lazy_component_js_1.useLazyComponent,
    truthy: truthy_js_1.truthy,
    SequenceContext: SequenceContext_js_1.SequenceContext,
    useRemotionContexts: wrap_remotion_context_js_1.useRemotionContexts,
    RemotionContextProvider: wrap_remotion_context_js_1.RemotionContextProvider,
    CSSUtils,
    setupEnvVariables: setup_env_variables_js_1.setupEnvVariables,
    MediaVolumeContext: volume_position_state_js_1.MediaVolumeContext,
    SetMediaVolumeContext: volume_position_state_js_1.SetMediaVolumeContext,
    validateDurationInFrames: validate_duration_in_frames_js_1.validateDurationInFrames,
    validateFps: validate_fps_js_1.validateFps,
    validateDefaultAndInputProps: validate_default_props_js_1.validateDefaultAndInputProps,
    validateDimension: validate_dimensions_js_1.validateDimension,
    getRemotionEnvironment: get_environment_js_1.getRemotionEnvironment,
    SharedAudioContext: shared_audio_tags_js_1.SharedAudioContext,
    SharedAudioContextProvider: shared_audio_tags_js_1.SharedAudioContextProvider,
    invalidCompositionErrorMessage: validate_composition_id_js_1.invalidCompositionErrorMessage,
    isCompositionIdValid: validate_composition_id_js_1.isCompositionIdValid,
    getPreviewDomElement: get_preview_dom_element_js_1.getPreviewDomElement,
    compositionsRef: CompositionManager_js_1.compositionsRef,
    DELAY_RENDER_CALLSTACK_TOKEN: delay_render_js_1.DELAY_RENDER_CALLSTACK_TOKEN,
    portalNode: portal_node_js_1.portalNode,
    waitForRoot: register_root_js_1.waitForRoot,
    CanUseRemotionHooksProvider: CanUseRemotionHooks_js_1.CanUseRemotionHooksProvider,
    CanUseRemotionHooks: CanUseRemotionHooks_js_1.CanUseRemotionHooks,
    PrefetchProvider: prefetch_state_js_1.PrefetchProvider,
    DurationsContextProvider: duration_state_js_1.DurationsContextProvider,
    IsPlayerContextProvider: is_player_js_1.IsPlayerContextProvider,
    useIsPlayer: is_player_js_1.useIsPlayer,
    useRemotionEnvironment: get_environment_js_1.useRemotionEnvironment,
    validateFrame: validate_frame_js_1.validateFrame,
    EditorPropsProvider: EditorProps_js_1.EditorPropsProvider,
    EditorPropsContext: EditorProps_js_1.EditorPropsContext,
    usePreload: prefetch_js_1.usePreload,
    processColor: interpolate_colors_js_1.processColor,
    NonceContext: nonce_js_1.NonceContext,
    resolveVideoConfig: resolve_video_config_js_1.resolveVideoConfig,
    useResolvedVideoConfig: ResolveCompositionConfig_js_1.useResolvedVideoConfig,
    resolveCompositionsRef: ResolveCompositionConfig_js_1.resolveCompositionsRef,
    ResolveCompositionConfig: ResolveCompositionConfig_js_1.ResolveCompositionConfig,
    REMOTION_STUDIO_CONTAINER_ELEMENT: get_preview_dom_element_js_1.REMOTION_STUDIO_CONTAINER_ELEMENT,
    AssetManager: AssetManager_js_1.AssetManager,
    bundleName: 'bundle.js',
};
