"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_dom_1 = require("react-dom");
const client_1 = __importDefault(require("react-dom/client"));
const remotion_1 = require("remotion");
require("../styles/styles.css");
const Editor_1 = require("./editor/components/Editor");
const EditorContexts_1 = require("./editor/components/EditorContexts");
const ServerDisconnected_1 = require("./editor/components/Notifications/ServerDisconnected");
const event_source_1 = require("./event-source");
remotion_1.Internals.CSSUtils.injectCSS(remotion_1.Internals.CSSUtils.makeDefaultCSS(null, '#1f2428'));
const getServerDisconnectedDomElement = () => {
    return document.getElementById('server-disconnected-overlay');
};
const content = ((0, jsx_runtime_1.jsx)(remotion_1.Internals.RemotionRoot, { numberOfAudioTags: window.remotion_numberOfAudioTags, children: (0, jsx_runtime_1.jsxs)(EditorContexts_1.EditorContexts, { children: [(0, jsx_runtime_1.jsx)(Editor_1.Editor, {}), (0, react_dom_1.createPortal)((0, jsx_runtime_1.jsx)(ServerDisconnected_1.ServerDisconnected, {}), getServerDisconnectedDomElement())] }) }));
if (client_1.default.createRoot) {
    client_1.default.createRoot(remotion_1.Internals.getPreviewDomElement()).render(content);
}
else {
    client_1.default.render(content, remotion_1.Internals.getPreviewDomElement());
}
(0, event_source_1.openEventSource)();
