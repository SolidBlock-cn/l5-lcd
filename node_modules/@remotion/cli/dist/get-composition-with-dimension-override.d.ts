import type { BrowserExecutable, ChromiumOptions, HeadlessBrowser, RemotionServer } from '@remotion/renderer';
import type { AnyCompMetadata } from 'remotion';
export declare const getCompositionWithDimensionOverride: ({ height, width, args, compositionIdFromUi, chromiumOptions, envVariables, port, puppeteerInstance, timeoutInMilliseconds, browserExecutable, serveUrlOrWebpackUrl, indent, inputProps, verbose, server, }: {
    height: number | null;
    width: number | null;
    args: string[];
    compositionIdFromUi: string | null;
    timeoutInMilliseconds: number;
    puppeteerInstance: HeadlessBrowser | undefined;
    envVariables: Record<string, string>;
    chromiumOptions: ChromiumOptions;
    port: number | null;
    browserExecutable: BrowserExecutable | null;
    serveUrlOrWebpackUrl: string;
    indent: boolean;
    verbose: boolean;
    inputProps: Record<string, unknown>;
    server: RemotionServer;
}) => Promise<{
    compositionId: string;
    reason: string;
    config: AnyCompMetadata;
    argsAfterComposition: string[];
}>;
