"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Editor = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const remotion_1 = require("remotion");
const colors_1 = require("../helpers/colors");
const noop_1 = require("../helpers/noop");
const timeline_zoom_1 = require("../state/timeline-zoom");
const z_index_1 = require("../state/z-index");
const EditorContent_1 = require("./EditorContent");
const FramePersistor_1 = require("./FramePersistor");
const GlobalKeybindings_1 = require("./GlobalKeybindings");
const Modals_1 = require("./Modals");
const NoRegisterRoot_1 = require("./NoRegisterRoot");
const NotificationCenter_1 = require("./Notifications/NotificationCenter");
const ZoomPersistor_1 = require("./ZoomPersistor");
const background = {
    backgroundColor: colors_1.BACKGROUND,
    display: 'flex',
    width: '100%',
    height: '100%',
    flexDirection: 'column',
    position: 'absolute',
};
const Editor = () => {
    const [Root, setRoot] = (0, react_1.useState)(() => remotion_1.Internals.getRoot());
    const [waitForRoot] = (0, react_1.useState)(() => {
        if (Root) {
            return 0;
        }
        return (0, remotion_1.delayRender)('Waiting for registerRoot()');
    });
    (0, react_1.useEffect)(() => {
        if (Root) {
            return;
        }
        const cleanup = remotion_1.Internals.waitForRoot((NewRoot) => {
            setRoot(() => NewRoot);
            (0, remotion_1.continueRender)(waitForRoot);
        });
        return () => cleanup();
    }, [Root, waitForRoot]);
    return ((0, jsx_runtime_1.jsx)(z_index_1.HigherZIndex, { onEscape: noop_1.noop, onOutsideClick: noop_1.noop, children: (0, jsx_runtime_1.jsxs)(timeline_zoom_1.TimelineZoomContext, { children: [(0, jsx_runtime_1.jsxs)("div", { style: background, children: [Root === null ? null : (0, jsx_runtime_1.jsx)(Root, {}), (0, jsx_runtime_1.jsxs)(remotion_1.Internals.CanUseRemotionHooksProvider, { children: [(0, jsx_runtime_1.jsx)(FramePersistor_1.FramePersistor, {}), (0, jsx_runtime_1.jsx)(ZoomPersistor_1.ZoomPersistor, {}), Root === null ? (0, jsx_runtime_1.jsx)(NoRegisterRoot_1.NoRegisterRoot, {}) : (0, jsx_runtime_1.jsx)(EditorContent_1.EditorContent, {}), (0, jsx_runtime_1.jsx)(GlobalKeybindings_1.GlobalKeybindings, {})] }), (0, jsx_runtime_1.jsx)(NotificationCenter_1.NotificationCenter, {})] }), (0, jsx_runtime_1.jsx)(Modals_1.Modals, {})] }) }));
};
exports.Editor = Editor;
