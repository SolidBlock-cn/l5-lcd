"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlaybackrateControl = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const remotion_1 = require("remotion");
const icons_js_1 = require("./icons.js");
const use_component_visible_js_1 = __importDefault(require("./utils/use-component-visible.js"));
const PlaybackPopup = ({ setIsComponentVisible }) => {
    const PLAYBACK_RATES = [0.5, 0.8, 1, 1.2, 1.5, 1.8, 2, 2.5, 3, 3.5];
    const { setPlaybackRate } = (0, react_1.useContext)(remotion_1.Internals.Timeline.TimelineContext);
    const playbackPopup = {
        position: 'absolute',
        left: 0,
        width: 125,
        bottom: 35,
        background: 'rgb(0 0 0 / 50%)',
        borderRadius: 8,
        color: '#fff',
        textAlign: 'left',
        backdropFilter: 'blur(10px)',
        zIndex: 100,
    };
    const rateDiv = {
        height: 30,
        lineHeight: '30px',
        padding: '0 15px',
    };
    const speedText = {
        fontWeight: '700',
        padding: '15px 15px 0 15px',
        cursor: 'default',
    };
    return ((0, jsx_runtime_1.jsxs)("div", { style: playbackPopup, children: [(0, jsx_runtime_1.jsx)("div", { style: speedText, children: "Change speed" }), PLAYBACK_RATES.map((rate) => {
                return ((0, jsx_runtime_1.jsx)("div", { style: rateDiv, onPointerUp: (e) => {
                        e.stopPropagation();
                        e.preventDefault();
                        setPlaybackRate(rate);
                        setIsComponentVisible(false);
                    }, children: rate }, rate));
            })] }));
};
const PlaybackrateControl = () => {
    const { ref, isComponentVisible, setIsComponentVisible } = (0, use_component_visible_js_1.default)(false);
    const playbackButton = {
        position: 'relative',
        display: 'inline-flex',
        alignItems: 'center',
        padding: '6px 0 6px 0',
        border: 'none',
        background: 'none',
        height: 36,
        cursor: 'pointer',
    };
    return ((0, jsx_runtime_1.jsx)("div", { ref: ref, children: (0, jsx_runtime_1.jsxs)("button", { type: "button", "aria-label": "Change playback rate", style: playbackButton, onPointerUp: (e) => {
                e.stopPropagation();
                e.preventDefault();
                setIsComponentVisible(!isComponentVisible);
            }, children: [(0, jsx_runtime_1.jsx)(icons_js_1.SettingsIcon, { iconSize: 22 }), isComponentVisible && ((0, jsx_runtime_1.jsx)(PlaybackPopup, { setIsComponentVisible: setIsComponentVisible }))] }) }));
};
exports.PlaybackrateControl = PlaybackrateControl;
