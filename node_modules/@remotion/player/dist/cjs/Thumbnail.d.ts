import type { CSSProperties, MutableRefObject } from 'react';
import type { CompProps } from 'remotion';
import type { AnyZodObject } from 'zod';
import type { ThumbnailMethods } from './player-methods.js';
import type { ErrorFallback, RenderLoading } from './PlayerUI.js';
import type { PropsIfHasProps } from './utils/props-if-has-props.js';
type ThumbnailProps<Schema extends AnyZodObject, Props> = PropsIfHasProps<Schema, Props> & CompProps<Schema> & {
    frameToDisplay: number;
    style?: CSSProperties;
    durationInFrames: number;
    compositionWidth: number;
    compositionHeight: number;
    fps: number;
    errorFallback?: ErrorFallback;
    renderLoading?: RenderLoading;
    className?: string;
};
export declare const ThumbnailFn: <Schema extends AnyZodObject, Props>({ frameToDisplay, style, inputProps, compositionHeight, compositionWidth, durationInFrames, fps, className, errorFallback, renderLoading, ...componentProps }: ThumbnailProps<Schema, Props>, ref: MutableRefObject<ThumbnailMethods>) => JSX.Element;
/**
 * @description A component which can be rendered in a regular React App (for example: Create React App, Next.js) to display a single frame of a video.
 * @see [Documentation](https://www.remotion.dev/docs/player/thumbnail)
 */
export declare const Thumbnail: <Schema extends AnyZodObject, Props>(props: ThumbnailProps<Schema, Props> & import("react").RefAttributes<ThumbnailMethods>) => React.ReactElement | null;
export {};
