import type { TAsset } from 'remotion';
export type AudioChannelsAndDurationResultCache = {
    channels: number;
    duration: number | null;
};
export type DownloadMap = {
    id: string;
    isDownloadingMap: {
        [src: string]: {
            [downloadDir: string]: boolean;
        } | undefined;
    };
    hasBeenDownloadedMap: {
        [src: string]: {
            [downloadDir: string]: string | null;
        } | undefined;
    };
    listeners: {
        [key: string]: {
            [downloadDir: string]: (() => void)[];
        };
    };
    durationOfAssetCache: Record<string, AudioChannelsAndDurationResultCache>;
    downloadDir: string;
    preEncode: string;
    audioMixing: string;
    complexFilter: string;
    audioPreprocessing: string;
    stitchFrames: string;
    assetDir: string;
    compositingDir: string;
    compositorCache: {
        [key: string]: string;
    };
};
export type RenderAssetInfo = {
    assets: TAsset[][];
    imageSequenceName: string;
    firstFrameIndex: number;
    downloadMap: DownloadMap;
};
export declare const makeDownloadMap: () => DownloadMap;
export declare const cleanDownloadMap: (downloadMap: DownloadMap) => void;
