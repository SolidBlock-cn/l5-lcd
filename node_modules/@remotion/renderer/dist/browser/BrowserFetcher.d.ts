/**
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import type { Product } from './Product';
type Platform = 'linux' | 'mac' | 'mac_arm' | 'win32' | 'win64';
interface BrowserFetcherRevisionInfo {
    folderPath: string;
    executablePath: string;
    url: string;
    local: boolean;
    revision: string;
    product: string;
}
export declare const getPlatform: (product: Product) => Platform;
export declare const getDownloadsFolder: (product: Product) => string;
export declare const getDownloadHost: (product: Product) => "https://storage.googleapis.com" | "https://archive.mozilla.org/pub/firefox/nightly/latest-mozilla-central";
export declare const download: ({ revision, progressCallback, product, platform, downloadHost, downloadsFolder, }: {
    revision: string;
    progressCallback: (x: number, y: number) => void;
    product: Product;
    platform: Platform;
    downloadHost: string;
    downloadsFolder: string;
}) => Promise<BrowserFetcherRevisionInfo | undefined>;
export declare const localRevisions: (downloadsFolder: string, product: Product, platform: Platform) => Promise<string[]>;
export declare const removeBrowser: (revision: string, folderPath: string) => Promise<void>;
export declare const getFolderPath: (revision: string, downloadsFolder: string, platform: Platform) => string;
export declare const getRevisionInfo: (revision: string, product: Product) => BrowserFetcherRevisionInfo;
export {};
