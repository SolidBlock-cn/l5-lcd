import type { AnyCompMetadata } from 'remotion';
import type { BrowserExecutable } from './browser-executable';
import type { BrowserLog } from './browser-log';
import type { HeadlessBrowser } from './browser/Browser';
import type { ChromiumOptions } from './open-browser';
import type { RemotionServer } from './prepare-server';
type InternalGetCompositionsOptions = {
    inputProps: Record<string, unknown>;
    envVariables: Record<string, string>;
    puppeteerInstance: HeadlessBrowser | undefined;
    onBrowserLog: null | ((log: BrowserLog) => void);
    browserExecutable: BrowserExecutable | null;
    timeoutInMilliseconds: number;
    chromiumOptions: ChromiumOptions;
    port: number | null;
    server: RemotionServer | undefined;
    indent: boolean;
    verbose: boolean;
    serveUrlOrWebpackUrl: string;
};
export type GetCompositionsOptions = {
    inputProps?: Record<string, unknown> | null;
    envVariables?: Record<string, string>;
    puppeteerInstance?: HeadlessBrowser;
    onBrowserLog?: (log: BrowserLog) => void;
    browserExecutable?: BrowserExecutable;
    timeoutInMilliseconds?: number;
    chromiumOptions?: ChromiumOptions;
    port?: number | null;
    verbose?: boolean;
};
export declare const internalGetCompositions: ({ browserExecutable, chromiumOptions, envVariables, indent, inputProps, onBrowserLog, port, puppeteerInstance, serveUrlOrWebpackUrl, server, timeoutInMilliseconds, verbose, }: InternalGetCompositionsOptions) => Promise<AnyCompMetadata[]>;
/**
 * @description Gets the compositions defined in a Remotion project based on a Webpack bundle.
 * @see [Documentation](https://www.remotion.dev/docs/renderer/get-compositions)
 */
export declare const getCompositions: (serveUrlOrWebpackUrl: string, config?: GetCompositionsOptions) => Promise<AnyCompMetadata[]>;
export {};
