import type { Codec } from './codec';
export declare const validAudioCodecs: readonly ["pcm-16", "aac", "mp3", "opus"];
export type AudioCodec = typeof validAudioCodecs[number];
export declare const supportedAudioCodecs: {
    readonly h264: readonly ["aac", "pcm-16"];
    readonly 'h264-mkv': readonly ["pcm-16"];
    readonly aac: readonly ["aac", "pcm-16"];
    readonly gif: const[];
    readonly h265: readonly ["aac", "pcm-16"];
    readonly mp3: readonly ["mp3", "pcm-16"];
    readonly prores: readonly ["aac", "pcm-16"];
    readonly vp8: readonly ["opus", "pcm-16"];
    readonly vp9: readonly ["opus", "pcm-16"];
    readonly wav: readonly ["pcm-16"];
};
declare const audioCodecNames: readonly ["pcm_s16le", "aac", "libmp3lame", "libopus"];
type FfmpegAudioCodecName = typeof audioCodecNames[number];
export declare const mapAudioCodecToFfmpegAudioCodecName: (audioCodec: AudioCodec) => FfmpegAudioCodecName;
export declare const defaultAudioCodecs: {
    [key in Codec]: {
        [k in 'compressed' | 'lossless']: typeof supportedAudioCodecs[key][number] | null;
    };
};
export declare const getDefaultAudioCodec: ({ codec, preferLossless, }: {
    codec: Codec;
    preferLossless: boolean;
}) => AudioCodec | null;
export {};
