import type { Codec } from './codec';
import type { FfmpegOverrideFn } from './ffmpeg-override';
import type { VideoImageFormat } from './image-format';
import type { CancelSignal } from './make-cancel-signal';
import type { PixelFormat } from './pixel-format';
import type { ProResProfile } from './prores-profile';
type PreStitcherOptions = {
    fps: number;
    width: number;
    height: number;
    outputLocation: string;
    pixelFormat: PixelFormat | undefined;
    codec: Codec | undefined;
    crf: number | null | undefined;
    onProgress: (progress: number) => void;
    proResProfile: ProResProfile | undefined;
    verbose: boolean;
    imageFormat: VideoImageFormat;
    ffmpegOverride: FfmpegOverrideFn;
    signal: CancelSignal;
    videoBitrate: string | null;
    indent: boolean;
};
export declare const prespawnFfmpeg: (options: PreStitcherOptions) => {
    task: import("execa").ExecaChildProcess<string>;
    getLogs: () => string;
};
export {};
