"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("@typescript-eslint/utils");
const createRule = utils_1.ESLintUtils.RuleCreator(() => {
    return `https://remotion.dev/docs/staticfile-remote-urls`;
});
const RelativePathStaticFile = [
    "Don't pass a remote URL to staticFile().",
    "See: https://remotion.dev/docs/staticfile-remote-urls",
].join("\n");
exports.default = createRule({
    name: "staticfile-no-remote",
    meta: {
        type: "problem",
        docs: {
            description: RelativePathStaticFile,
            recommended: "warn",
        },
        fixable: undefined,
        schema: [],
        messages: {
            RelativePathStaticFile: RelativePathStaticFile,
        },
    },
    defaultOptions: [],
    create: (context) => {
        return {
            CallExpression: (node) => {
                const value = node;
                // src={"some string"}
                if (!value) {
                    return;
                }
                if (node.type === "CallExpression" &&
                    node.callee.type === "Identifier" &&
                    node.callee.name === "staticFile") {
                    const args = node.arguments;
                    if (args.length === 0) {
                        return;
                    }
                    const firstArg = args[0];
                    if (firstArg.type === "Literal") {
                        const value = firstArg.value;
                        if (typeof value !== "string") {
                            return;
                        }
                        if (value.startsWith("http://")) {
                            context.report({
                                messageId: "RelativePathStaticFile",
                                node,
                            });
                        }
                        if (value.startsWith("https://")) {
                            context.report({
                                messageId: "RelativePathStaticFile",
                                node,
                            });
                        }
                    }
                }
            },
        };
    },
});
